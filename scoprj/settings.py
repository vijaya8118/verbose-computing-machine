"""
Django settings for scoprj project.

Generated by 'django-admin startproject' using Django 5.0.10.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-s73k%1rwq2rs7epi*39jr1rzf+gylw*l0&-2s3=mabka=yuh-n"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*','bigco.localhost',]
BASE_URL = 'localhost'
LOGIN_URL = '/create_member/'
CSRF_TRUSTED_ORIGINS = ['https://*']
PORT = ':8000'
AUTH_USER_MODEL = 'scoapp.Members'
SITE_ID = 1 

# Application definition

SHARED_APPS = (
    'django_tenants',  # mandatory
    'scoapp', 
    'django.contrib.contenttypes',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.staticfiles',



)

TENANT_APPS = (
    'django.contrib.contenttypes',
    'django.contrib.sites',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.admin',
)

INSTALLED_APPS = list(SHARED_APPS) + [app for app in TENANT_APPS if app not in SHARED_APPS]


MIDDLEWARE = [
    "django_tenants.middleware.main.TenantMainMiddleware", # first
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Make sure this is correct
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'scoapp.middleware.GroupBasedNavbarMiddleware',

]

ROOT_URLCONF = "scoprj.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "scoprj.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "NAME": "scodb",
        "ENGINE": "django_tenants.postgresql_backend",
        "USER": "postgres",
        "PASSWORD": "root1234",
        "HOST":'localhost',
        "PORT":5433,
    },   
}
DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)

TENANT_APPS=['scoapp']
TENANT_MODEL = "scoapp.Client"
TENANT_DOMAIN_MODEL = "scoapp.Domain"  
SHOW_PUBLIC_IF_NO_TENANT_FOUND = True
AUTH_USER_MODEL = 'scoapp.Members'

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

# Directory where static files will be collected (usually an absolute path)
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Optional: directories where you can store static files (for development)
import os

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # For static files in your app's base directory
]


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # For static files in your app's base directory
    '/Volumes/Macintosh HD/sco/scoprj/static',  # Absolute path to the static folder
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'vijaya5red@gmail.com'
EMAIL_HOST_PASSWORD = 'cvoi tdwj oaav jnyy'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
